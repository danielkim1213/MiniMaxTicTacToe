/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author kyw40
 */
public class MainPage extends javax.swing.JFrame {

    private int count = 0;
    private String turn = "O";
    private String tile[][] = {
            {"", "", ""},
            {"", "", ""},
            {"", "", ""}
        };
    
    
    /**
     * Creates new form MainPage
     */
    public MainPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTile1 = new javax.swing.JButton();
        btnTile2 = new javax.swing.JButton();
        btnTile3 = new javax.swing.JButton();
        btnTile4 = new javax.swing.JButton();
        btnTile5 = new javax.swing.JButton();
        btnTile6 = new javax.swing.JButton();
        btnTile7 = new javax.swing.JButton();
        btnTile8 = new javax.swing.JButton();
        btnTile9 = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        lblBestMove = new javax.swing.JLabel();
        lblCounter = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(313, 382));
        setPreferredSize(new java.awt.Dimension(313, 382));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnTile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTile1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnTile1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 60, 60));

        btnTile2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTile2ActionPerformed(evt);
            }
        });
        getContentPane().add(btnTile2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 60, 60));

        btnTile3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTile3ActionPerformed(evt);
            }
        });
        getContentPane().add(btnTile3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 60, 60));

        btnTile4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTile4ActionPerformed(evt);
            }
        });
        getContentPane().add(btnTile4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 60, 60));

        btnTile5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTile5ActionPerformed(evt);
            }
        });
        getContentPane().add(btnTile5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 60, 60));

        btnTile6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTile6ActionPerformed(evt);
            }
        });
        getContentPane().add(btnTile6, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, 60, 60));

        btnTile7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTile7ActionPerformed(evt);
            }
        });
        getContentPane().add(btnTile7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 60, 60));

        btnTile8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTile8ActionPerformed(evt);
            }
        });
        getContentPane().add(btnTile8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 60, 60));

        btnTile9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTile9ActionPerformed(evt);
            }
        });
        getContentPane().add(btnTile9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 60, 60));

        lblStatus.setText("Playing Game!");
        getContentPane().add(lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, -1));

        lblBestMove.setText("Best Move: ");
        getContentPane().add(lblBestMove, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, -1, -1));

        lblCounter.setText("jLabel1");
        getContentPane().add(lblCounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTile1ActionPerformed
        if(btnTile1.getText() == "")
        {
            btnTile1.setText(turn);
            tile[0][0] = turn;
            changeTurn();
        }
    }//GEN-LAST:event_btnTile1ActionPerformed

    private void btnTile2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTile2ActionPerformed
        if(btnTile2.getText() == "")
        {
            btnTile2.setText(turn);
            tile[0][1] = turn;
            changeTurn();
        }
    }//GEN-LAST:event_btnTile2ActionPerformed

    private void btnTile3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTile3ActionPerformed
        if(btnTile3.getText() == "")
        {
            btnTile3.setText(turn);
            tile[0][2] = turn;
            changeTurn();
        }
    }//GEN-LAST:event_btnTile3ActionPerformed

    private void btnTile4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTile4ActionPerformed
        if(btnTile4.getText() == "")
        {
            btnTile4.setText(turn);
            tile[1][0] = turn;
            changeTurn();
        }
    }//GEN-LAST:event_btnTile4ActionPerformed

    private void btnTile5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTile5ActionPerformed
        if(btnTile5.getText() == "")
        {
            btnTile5.setText(turn);
            tile[1][1] = turn;
            changeTurn();
        }
    }//GEN-LAST:event_btnTile5ActionPerformed

    private void btnTile6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTile6ActionPerformed
        if(btnTile6.getText() == "")
        {
            btnTile6.setText(turn);
            tile[1][2] = turn;
            changeTurn();
        }
    }//GEN-LAST:event_btnTile6ActionPerformed

    private void btnTile7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTile7ActionPerformed
        if(btnTile7.getText() == "")
        {
            btnTile7.setText(turn);
            tile[2][0] = turn;
            changeTurn();
        }
    }//GEN-LAST:event_btnTile7ActionPerformed

    private void btnTile8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTile8ActionPerformed
        if(btnTile8.getText() == "")
        {
            btnTile8.setText(turn);
            tile[2][1] = turn;
            changeTurn();
        }
    }//GEN-LAST:event_btnTile8ActionPerformed

    private void btnTile9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTile9ActionPerformed
        if(btnTile9.getText() == "")
        {
            btnTile9.setText(turn);
            tile[2][2] = turn;
            changeTurn();
        }
    }//GEN-LAST:event_btnTile9ActionPerformed
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }
    
    private void changeTurn()
    {
        String winner = checkWin(tile);
        if(winner != "?")
        {
            lblStatus.setText(winner);
        }
        if (turn == "O")
        {
            turn = "X";
        }
        else
        {
            turn = "O";
        }
        makeMove();
        
    }
    
     public String checkWin(String board[][]) {
        for (int i = 0; i < 3; i++) {
            if (board[i][0].equals(board[i][1]) && board[i][1].equals(board[i][2]) && !board[i][0].equals("")) {
                return board[i][0];
            }
        }

        for (int j = 0; j < 3; j++) {
            if (board[0][j].equals(board[1][j]) && board[1][j].equals(board[2][j]) && !board[0][j].equals("")) {
                return board[0][j];
            }
        }

        if ((board[0][0].equals(board[1][1]) && board[1][1].equals(board[2][2]) && !board[0][0].equals("")) ||
            (board[0][2].equals(board[1][1]) && board[1][1].equals(board[2][0]) && !board[0][2].equals(""))) {
            return board[1][1];
        }
        
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[i][j] == "") {
                    return "?";
                }
            }
        }

        return "T"; 
    }
     
    private int minimax(String[][] board, int depth, boolean myTurn)
    {
        count++;
        String winner = checkWin(board);

        
        if (winner == "X") {
            return 1;
        } else if (winner == "O") {
            return -1;
        } else if (winner == "T") {
            return 0;
        }

        if (myTurn) {
            int bestScore = Integer.MIN_VALUE;
            for (int row = 0; row < 3; row++) {
                for (int col = 0; col < 3; col++) {
                    if (board[row][col].equals("")) {
                        board[row][col] = "X";
                        int score = minimax(board, depth + 1, false);
                        board[row][col] = "";
                        bestScore = Math.max(score, bestScore);
                    }
                }
            }
            return bestScore;
        } else {
            int bestScore = Integer.MAX_VALUE;
            for (int row = 0; row < 3; row++) {
                for (int col = 0; col < 3; col++) {
                    if (board[row][col].equals("")) {
                        board[row][col] = "O";
                        int score = minimax(board, depth + 1, true);
                        board[row][col] = "";
                        bestScore = Math.min(score, bestScore);
                    }
                }
            }
            return bestScore;
        }
    }
    private void makeMove()
    {
        if(turn == "O")
        {
            return;
        }
        
        int[] bestMove = new int[]{-1, -1};
        int bestScore = Integer.MIN_VALUE;
        
        String[][] board = new String[3][3];
        
        for(int i = 0; i < 3; i++)
        {
            for(int j = 0; j < 3; j++)
            {
                for(int k = 0; k < 3; k++)
                    {
                        for(int y = 0; y < 3; y++)
                        {
                            board[k][y] = tile[k][y];
                        }
                    }
                if(board[i][j] == "")
                {
                    board[i][j] = "X";
                    int score = minimax(board, 0, false);
                    if(score > bestScore)
                    {
                        bestMove[0] = i;
                        bestMove[1] = j;
                        bestScore = score;
                    }
                    board[i][j] = "";
                }
            }
            
        lblCounter.setText("Count: " + count + ", " + bestScore);
        count = 0;
        }
        lblBestMove.setText("Best Move: " + bestMove[0] + "," + bestMove[1]);
        
        
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTile1;
    private javax.swing.JButton btnTile2;
    private javax.swing.JButton btnTile3;
    private javax.swing.JButton btnTile4;
    private javax.swing.JButton btnTile5;
    private javax.swing.JButton btnTile6;
    private javax.swing.JButton btnTile7;
    private javax.swing.JButton btnTile8;
    private javax.swing.JButton btnTile9;
    private javax.swing.JLabel lblBestMove;
    private javax.swing.JLabel lblCounter;
    private javax.swing.JLabel lblStatus;
    // End of variables declaration//GEN-END:variables
}
